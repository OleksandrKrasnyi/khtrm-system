#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º Python –∫–æ–¥–∞
"""

import os
import subprocess
import sys


def run_command(cmd, description):
    """–ó–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã —Å –≤—ã–≤–æ–¥–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞"""
    print(f"\nüîß {description}")
    print("=" * 60)

    try:
        result = subprocess.run(
            cmd,
            shell=True,
            capture_output=True,
            text=True,
            encoding="utf-8",
            errors="replace",
        )

        if result.stdout:
            print(result.stdout)
        if result.stderr:
            print("STDERR:", result.stderr)

        return result.returncode == 0
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {e}")
        return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    print("üîß –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï PYTHON –ö–û–î–ê")
    print("=" * 60)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
    if not os.path.exists("pyproject.toml"):
        print(
            "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω pyproject.toml. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞."
        )
        sys.exit(1)

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    print("\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –î–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    run_command("uv run ruff check --statistics", "–¢–µ–∫—É—â–∏–µ –ø—Ä–æ–±–ª–µ–º—ã")

    # 1. Ruff - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    print("\nüõ†Ô∏è  1. RUFF - –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø")
    run_command("uv run ruff check --fix", "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π")

    # 2. Ruff - –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    print("\n‚ö†Ô∏è  2. RUFF - –ù–ï–ë–ï–ó–û–ü–ê–°–ù–´–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø")
    run_command(
        "uv run ruff check --unsafe-fixes --fix", "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π"
    )

    # 3. Ruff - —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    print("\nüé® 3. RUFF - –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï")
    run_command("uv run ruff format", "–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞")

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    print("\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û–°–õ–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:")
    final_success = run_command("uv run ruff check --statistics", "–û—Å—Ç–∞–≤—à–∏–µ—Å—è –ø—Ä–æ–±–ª–µ–º—ã")

    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "=" * 60)
    if final_success:
        print("üéâ –í–°–ï –ü–†–û–ë–õ–ï–ú–´ –ò–°–ü–†–ê–í–õ–ï–ù–´!")
        print("‚úÖ –ö–æ–¥ –≥–æ—Ç–æ–≤ –∫ –∫–æ–º–º–∏—Ç—É")
    else:
        print("‚ö†Ô∏è  –û–°–¢–ê–õ–ò–°–¨ –ü–†–û–ë–õ–ï–ú–´")
        print("üîç –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Ç—Ä–µ–±—É—é—Ç —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
        print("üìã –ó–∞–ø—É—Å—Ç–∏—Ç–µ 'python scripts/python-check.py' –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")

    return 0 if final_success else 1


if __name__ == "__main__":
    sys.exit(main())

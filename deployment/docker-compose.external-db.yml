version: '3.8'

services:
  # Python FastAPI Backend (с внешней БД saltdepoavt_)
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: khtrm-backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - DEBUG=False
      - DATABASE_ECHO=False
      - SECRET_KEY=your-secret-key-change-this-in-production
      - CORS_ORIGINS=["http://localhost", "http://localhost:3000", "http://localhost:8080"]
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    networks:
      - khtrm-network
    # Добавляем extra_hosts для резолва имен
    extra_hosts:
      - "mysql-server:91.222.248.216"

  # Vue.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: khtrm-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - khtrm-network

  # Nginx Reverse Proxy (опционально)
  nginx:
    image: nginx:alpine
    container_name: khtrm-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - khtrm-network

networks:
  khtrm-network:
    driver: bridge 